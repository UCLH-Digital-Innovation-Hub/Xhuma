services:
  nginx:
    image: ${ACR_LOGIN_SERVER}/nginx:${TAG:-latest}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - xhuma
    networks:
      - xhuma-net

  redis:
    image: redis:7.2
    command:
      - /bin/sh
      - -c
      - |
        redis-server \
        --requirepass "$${REDIS_PASSWORD}" \
        --maxmemory 256mb \
        --maxmemory-policy volatile-lru \
        --appendonly yes \
        --appendfsync everysec \
        --save 900 1 \
        --save 300 10 \
        --save 60 10000 \
        --maxclients 100 \
        --timeout 300 \
        --tcp-keepalive 60
    volumes:
      - type: volume
        source: redis-data
        target: /data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    sysctls:
      net.core.somaxconn: 1024
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - xhuma-net

  xhuma:
    image: ${ACR_LOGIN_SERVER}/xhuma:${TAG:-latest}
    depends_on:
      - redis
      - otel-collector
      - postgres
      - tempo
    environment:
      API_KEY: ${API_KEY}
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_PYTHON_LOG_CORRELATION: "true"
      OTEL_PYTHON_METER_PROVIDER: "sdk_meter_provider"
      OTEL_PYTHON_TRACER_PROVIDER: "sdk_tracer_provider"
      OTEL_SERVICE_NAME: "xhuma"
      POSTGRES_DB: ${POSTGRES_DB:-xhuma}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-xhuma}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - xhuma-net

  prometheus:
    image: ${ACR_LOGIN_SERVER}/prometheus:${TAG:-latest}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - xhuma-net

  grafana:
    image: ${ACR_LOGIN_SERVER}/grafana:${TAG:-latest}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      - tempo
    networks:
      - xhuma-net

  otel-collector:
    image: ${ACR_LOGIN_SERVER}/otel-collector:${TAG:-latest}
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    depends_on:
      - prometheus
      - tempo
    networks:
      - xhuma-net

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-xhuma}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
      - ./app/migrations:/docker-entrypoint-initdb.d
    networks:
      - xhuma-net

  tempo:
    image: ${ACR_LOGIN_SERVER}/tempo:${TAG:-latest}
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    networks:
      - xhuma-net

networks:
  xhuma-net:
    driver: bridge

volumes:
  postgres-data:
    driver: azure_file
    driver_opts:
      share_name: postgres-data
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  redis-data:
    driver: azure_file
    driver_opts:
      share_name: redis-data
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
